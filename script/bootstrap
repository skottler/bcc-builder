#!/bin/bash

set -e

KERNEL_VERSION="4.9.0-0.bpo.2-amd64"
LINUX_BASE_VERSION="4.3~bpo8+1"
AGENT_USER="buildkite-agent"

echo "Installing and configuring docker..."

apt-get -y install \
  apt-transport-https \
  ca-certificates \
  curl \
  gnupg2 \
  software-properties-common

curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -

add-apt-repository \
  "deb [arch=amd64] https://download.docker.com/linux/debian \
  $(lsb_release -cs) \
  stable"

apt-get update
apt-get install -y docker-ce
sudo usermod -aG docker ${AGENT_USER}

echo "Installing and configuring a newer kernel..."

if [ "$(uname -r)" == "${KERNEL_VERSION}" ]; then
  echo "The ${KERNEL_VERSION} kernel is already running. Nothing to do."
  exit 1
fi

# Get the number hierarchy of the cgroups for init. If the count is 1 then
# we aren't inside a container.
HIERARCHY_COUNT=$(cat /proc/1/cgroup | cut -d: -f3 | uniq | wc -l)

if [[ $HIERARCHY_COUNT -gt 1 ]]; then
  echo "Bootstrap is intended to run on the build host, not inside a container."
  exit 1
fi

source /etc/os-release

if [ "${VERSION}" != "8 (jessie)" ]; then
  echo "This only works on Debian Jessie. Bailing."
  exit 1
fi

if [ ! -e /etc/apt/sources.list.d/backports.list ]; then
  tee -a /etc/apt/sources.list.d/backports.list <<EOF
deb http://deb.debian.org/debian/ jessie-backports main
deb-src http://deb.debian.org/debian/ jessie-backports main
EOF
fi

apt-get update
apt-get install -y linux-image-${KERNEL_VERSION}
apt-get install -y linux-headers-${KERNEL_VERSION}
apt-get install -y linux-base=${LINUX_BASE_VERSION}

echo "The ${KERNEL_VERSION} kernel has been installed. Reboot the host to use the new kernel."
